--------------------------------------------------------
--  File created - Tuesday-December-15-2015   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table STOCK
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."STOCK" ("ID_STO" NUMBER(*,0), "NAME_STO" VARCHAR2(200), "AMOUNT" NUMBER(*,0), "BPRICE" NUMBER(*,0), "USED" NUMBER, "ENTER" NUMBER, "D_ENTER" VARCHAR2(20), "D_USE" VARCHAR2(20))
--------------------------------------------------------
--  DDL for Table MEMBER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MEMBER" ("ID_MEM" NUMBER, "NAME_M" VARCHAR2(200), "SUR_M" VARCHAR2(200), "BIRTHDAY_M" VARCHAR2(20), "SEX" VARCHAR2(20), "USERNAME" VARCHAR2(50), "PASSWORD" VARCHAR2(50), "ADDR" VARCHAR2(255), "EMAIL_M" VARCHAR2(50), "TEL_M" VARCHAR2(20))
--------------------------------------------------------
--  DDL for Table PERSON
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."PERSON" ("ID_P" NUMBER, "NAME_P" VARCHAR2(20), "SUR_P" VARCHAR2(20), "BIRTH" VARCHAR2(20), "SEX" VARCHAR2(20), "TEL_P" VARCHAR2(20), "SALARY" VARCHAR2(20), "USERNAME" VARCHAR2(20), "PASSWORD" VARCHAR2(20))
--------------------------------------------------------
--  DDL for Table BPAYORDER
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."BPAYORDER" ("ORDER_NO" NUMBER, "CSIZE" VARCHAR2(50), "CAKE" VARCHAR2(200), "CREAM" VARCHAR2(200), "TOPPING1" VARCHAR2(200), "TOPPING2" VARCHAR2(200), "TOPPING3" VARCHAR2(200), "MESSAGE" VARCHAR2(500), "CANDLE" VARCHAR2(20), "PRICE" NUMBER, "STATUS" VARCHAR2(50), "ID_MEM" VARCHAR2(20), "DATEORDER" VARCHAR2(20))
--------------------------------------------------------
--  DDL for Index STOCK_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."STOCK_PK" ON "SYSTEM"."STOCK" ("ID_STO")
--------------------------------------------------------
--  DDL for Index MEMBER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."MEMBER_PK" ON "SYSTEM"."MEMBER" ("ID_MEM")
--------------------------------------------------------
--  DDL for Index PERSON_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."PERSON_PK" ON "SYSTEM"."PERSON" ("ID_P")
--------------------------------------------------------
--  DDL for Index BPAYORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SYSTEM"."BPAYORDER_PK" ON "SYSTEM"."BPAYORDER" ("ORDER_NO")
--------------------------------------------------------
--  Constraints for Table STOCK
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."STOCK" ADD CONSTRAINT "STOCK_PK" PRIMARY KEY ("ID_STO") ENABLE
  ALTER TABLE "SYSTEM"."STOCK" MODIFY ("ID_STO" NOT NULL ENABLE)
--------------------------------------------------------
--  Constraints for Table MEMBER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MEMBER" ADD CONSTRAINT "MEMBER_PK" PRIMARY KEY ("ID_MEM") ENABLE
  ALTER TABLE "SYSTEM"."MEMBER" MODIFY ("PASSWORD" NOT NULL ENABLE)
  ALTER TABLE "SYSTEM"."MEMBER" MODIFY ("USERNAME" NOT NULL ENABLE)
  ALTER TABLE "SYSTEM"."MEMBER" MODIFY ("ID_MEM" NOT NULL ENABLE)
--------------------------------------------------------
--  Constraints for Table PERSON
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."PERSON" ADD CONSTRAINT "PERSON_PK" PRIMARY KEY ("ID_P") ENABLE
  ALTER TABLE "SYSTEM"."PERSON" MODIFY ("ID_P" NOT NULL ENABLE)
--------------------------------------------------------
--  Constraints for Table BPAYORDER
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."BPAYORDER" ADD CONSTRAINT "BPAYORDER_PK" PRIMARY KEY ("ORDER_NO") ENABLE
  ALTER TABLE "SYSTEM"."BPAYORDER" MODIFY ("ORDER_NO" NOT NULL ENABLE)
--------------------------------------------------------
--  DDL for Trigger STOCK_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."STOCK_TRG" 
BEFORE INSERT ON STOCK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."STOCK_TRG" ENABLE
--------------------------------------------------------
--  DDL for Trigger STOCK_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."STOCK_TRG1" 
BEFORE INSERT ON STOCK 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_STO IS NULL THEN
      SELECT STOCK_SEQ1.NEXTVAL INTO :NEW.ID_STO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."STOCK_TRG1" ENABLE
--------------------------------------------------------
--  DDL for Trigger MEMBER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."MEMBER_TRG" 
BEFORE INSERT ON MEMBER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."MEMBER_TRG" ENABLE
--------------------------------------------------------
--  DDL for Trigger MEMBER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."MEMBER_TRG1" 
BEFORE INSERT ON MEMBER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_MEM IS NULL THEN
      SELECT MEMBER_SEQ1.NEXTVAL INTO :NEW.ID_MEM FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."MEMBER_TRG1" ENABLE
--------------------------------------------------------
--  DDL for Trigger PERSON_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."PERSON_TRG" 
BEFORE INSERT ON PERSON 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_P IS NULL THEN
      SELECT PERSON_SEQ.NEXTVAL INTO :NEW.ID_P FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."PERSON_TRG" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG1" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG1" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG2" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG2" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG3
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG3" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG3" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG5
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG5" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ORDER_NO IS NULL THEN
      SELECT BPAYORDER_SEQ5.NEXTVAL INTO :NEW.ORDER_NO FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG5" ENABLE
--------------------------------------------------------
--  DDL for Trigger BPAYORDER_TRG4
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SYSTEM"."BPAYORDER_TRG4" 
BEFORE INSERT ON BPAYORDER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER "SYSTEM"."BPAYORDER_TRG4" ENABLE
